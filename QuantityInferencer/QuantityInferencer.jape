Phase: Inference
Input: pair h t 
Options: control=appelt debug=true

Rule:QuestionAnswering
(
 {pair}
):rte
-->
{
		//get the entire annotation set of "pair"
       AnnotationSet pairAS = (AnnotationSet)bindings.get("rte");
       //create an itterator to itterate through the pairs
       Annotation pairAnno = pairAS.iterator().next();
      
       //get a pair
       AnnotationSet annoInPairAS = inputAS.get(pairAnno.getStartNode().getOffset(), pairAnno.getEndNode().getOffset());
       //get a hypotheiss the pair
       Annotation hAnno = annoInPairAS.get("h").iterator().next();
       //get the text in the pair
       Annotation tAnno = annoInPairAS.get("t").iterator().next();
       
       /*
        * Pseudo code for inference engine
        * for each pair:
        *	 for each annotation type in the hypothesis {Age, Money, Percent, ExactQuantity, ApproximateQuantity} 
        * 			for each annotation  {Age, Money, Percent, ExactQuantity, ApproximateQuantity}  in the text
        * 				compare the string in the "quantity" feature to see if there is a matching string in the text's annotation set. 
        * 
        * if true=entail
        * 
        * Use HashSet to store the types of annotions {Age, Money, Percent, ExactQuantity, ApproximateQuantity} 
        * Use JavaDoc for AnnotationSet, Annotation
        */
       
       /*
        * get
			
			AnnotationSet get(Set<String> types)
			
			    Select annotations by a set of types.
			
			    Parameters:
			        types - the set of annotation types to search for. 
			    Returns:
			        a snapshot copy of all annotations in this set that have one of the requested types. If there are no annotations of the requested types in this set, an empty set is returned. The returned set is immutable.


        */

       
       //get the set of annotations in the hypothesis
       AnnotationSet annoInH = outputAS.get(hAnno.getStartNode().getOffset(), hAnno.getEndNode().getOffset());
      
       Set quantityTypes = new HashSet();
       quantityTypes.add("Age");
       quantityTypes.add("ExactQuantity");
       quantityTypes.add("ApproximateQuantity");
       
       
       //here get anything that is in the set of relevant annotations
       boolean isXinH = annoInH.get("Age").isEmpty()==true?false:true;
       
       
       //for each , get the string to compair
       
       //get the annotation for Age in the text
       AnnotationSet annoInT = outputAS.get(tAnno.getStartNode().getOffset(), hAnno.getEndNode().getOffset());
       boolean isYinT = annoInT.get("Age").isEmpty()==true?false:true;

       
       
       
       
       //get the features from that pair annotation to add the new value for whether the pair are entailed
       FeatureMap features = pairAnno.getFeatures();
       //if an annotation about Age is found in both the hypothesis and the text, then say that the pair is entailed, 
       //else, say that it is not entailed
       if(isXinH && isYinT){
               // then we throw it our result
               features.put("entail",quantityTypes);
       }else{
               features.put("entail","false");
       }

       //or if Age is found in both the hypothesis and the text then we could add a new annotation that surrounds the pair
       //using the start and end points that were found earlier
	//       if(isXinH && isYinT){
	//    	   outputAS.add(pairAnno.getStartNode().getOffset(),pairanno.getEndNode().getOffset(),"Entail",gate.Factory.newFeatureMap());
	//       }

}